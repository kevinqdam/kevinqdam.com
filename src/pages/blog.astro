---
import BlogPostCard, { BlogPostCardProps } from '../components/BlogPostCard';
import Pills, { Pill } from '../components/Pills';
import Layout from '../layouts/Layout.astro';
import { CollectionEntry, getCollection } from 'astro:content';
import removeMd from 'remove-markdown';
import readingTime from 'reading-time';
import NavBar from '../components/NavBar';

const getUniqueTags = (
  tags: CollectionEntry<'blog'>['data']['tags']
): Pill[] => {
  const result: Pill[] = [];
  const seen = new Set();
  for (const tag of tags) {
    if (seen.has(tag.text)) {
      continue;
    }
    seen.add(tag.text);
    result.push({ ...tag });
  }
  return result;
};

const toBlogPostCardProps = (
  post: CollectionEntry<'blog'>
): BlogPostCardProps => {
  const {
    author,
    authorProfileImage,
    posted,
    title,
    preview,
    thumbnailImage,
    tags,
  } = post.data;
  return {
    author,
    authorProfileImage,
    posted,
    title,
    preview,
    thumbnailImage,
    tags,
    slug: post.slug,
    estReadTimeMinutes: readingTime(removeMd(post.body)).text,
  };
};

const posts = await getCollection('blog');
const postTags = posts.map((post) => post.data.tags).flat();
const tags = getUniqueTags(postTags).sort((a, b) => a.text > b.text ? 1 : -1);
const blogPostCardProps = posts.map(toBlogPostCardProps);
---

<Layout title='Blog'>
  <NavBar client:load activePath='/blog' />
  <h1 class='pb-6 text-3xl font-bold'>Blog</h1>
  <div class='flex flex-col space-y-4'>
    <h2 class='text-2xl font-bold'>Browse by tags</h2>
    <Pills pills={tags} />
    <h2 class='text-2xl font-bold'>All Posts</h2>
    {blogPostCardProps.map((props) => <BlogPostCard {...props} />)}
  </div>
</Layout>
