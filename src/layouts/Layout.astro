---
import Footer from '../components/Footer';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <link
      rel='icon'
      href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>ðŸ’¡</text></svg>"
    />
    <style is:global>
      @tailwind base;
      @tailwind components;
      @tailwind utilities;

      @layer components {
        /* Style heading anchors in MDX components */
        *:is(h1, h2, h3, h4, h5, h6) {
          @apply flex items-center gap-2;
        }

        /* Style articles to take the whole available width */
        article {
          @apply min-w-full;
        }

        /* Style code blocks for light and dark mode */
        pre[data-theme='light'] {
          @apply dark:hidden block bg-white shadow;
        }
        pre[data-theme='dark'] {
          @apply dark:block hidden shadow-lg;
        }

        /* Style in-line code for light and dark mode */
        code:not([data-theme]) {
          @apply inline-block px-2 rounded-lg bg-slate-200 dark:bg-gray-900 m-0.5;
        }
        a > code:not([data-theme]) {
          @apply underline
        }
      }
    </style></head
  >

  <body
    class='min-h-screen w-full bg-gray-100 dark:bg-gray-800 dark:text-white'
  >
    <div class='min-h-screen w-full bg-gray-100 dark:bg-gray-800'>
      <div class='flex w-full items-center justify-center'>
        <div
          class='flex w-full sm:w-10/12 flex-col justify-center px-8 md:w-8/12 lg:w-7/12'
        >
          <main>
            <slot />
          </main>
          <hr class='my-8 h-px border-0 bg-gray-400 dark:bg-gray-500' />
          <Footer />
        </div>
      </div>
    </div>
  </body>
  <script>
    const theme = (() => {
      if (typeof localStorage !== 'undefined') {
        const theme = localStorage.getItem('theme') ?? 'light';
        return theme;
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }
      return 'light';
    })();

    if (theme === 'light') {
      document.documentElement.classList.remove('dark');
    } else {
      document.documentElement.classList.add('dark');
    }
    window.localStorage.setItem('theme', theme);
  </script>
</html>
